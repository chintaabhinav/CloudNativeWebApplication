name: PR Status Check

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]

jobs:
  integration-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASS }}
          MYSQL_DATABASE: ${{ secrets.DB_NAME }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 21.7.3

      - name: Install dependencies
        run: npm install

      - name: Debug MySQL Connection
        run: |
          echo "Checking MySQL connection..."
          mysql -h "127.0.0.1" -u"${{ secrets.DB_USER }}" -p"${{ secrets.DB_PASS}}" -e "SHOW DATABASES;" || true

      - name: Debug MySQL Secrets (No Passwords)
        run: |
          echo "DB_USER=${{ secrets.DB_USER }}"
          echo "DB_DATABASE=${{ secrets.DB_NAME }}"
          echo "DB_HOST=localhost"
          echo "DB_ROOT_PASSWORD is set"

      - name: Ensure Database is Ready
        run: |
          echo "Waiting for MySQL to be fully ready..."
          for i in {1..10}; do
            mysql -h "127.0.0.1" -u"${{ secrets.DB_USER }}" -p"${{ secrets.DB_PASS }}" -e "SELECT 1" && break
            echo "MySQL not ready yet. Retrying in 5 seconds..."
            sleep 5
          done

      - name: Ensure Checks Table Exists
        run: |
          echo "Creating missing tables if necessary..."
          mysql -h "127.0.0.1" -u"${{ secrets.DB_USER }}" -p"${{ secrets.DB_PASS }}" -D "${{ secrets.DB_NAME }}" -e "
          CREATE TABLE IF NOT EXISTS ApplicationHealth (
            checkId INT AUTO_INCREMENT PRIMARY KEY,
            datetime DATETIME NOT NULL
          ) ENGINE=InnoDB;
          SHOW TABLES;"

          '

      - name: Run Tests # âœ… Fixed: Now actually runs something!
        env:
          DB_HOST: 127.0.0.1
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: root
          DB_PASS: ${{ secrets.DB_PASS }}
          DB_DIALECT: "mysql"
        run: |
          echo "Running tests with database connection..."
          npm test
